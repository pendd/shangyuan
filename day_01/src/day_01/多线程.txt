迅雷下载 ： 多线程
12306  ： 并发

垃圾回收方法：
	1.System.gc()
	2.Runtime.getRuntime.gc()

并行和并发：
	并行才是我们通常认为的那个同时做多件事情，而并发则是在线程这个模型下产生的概念。并发表示同时发生了多件事情，
	通过时间片切换，哪怕只有单一的核心，也可以实现“同时做多件事情”这个效果。根据底层是否有多处理器，
	并发与并行是可以等效的，这并不是两个互斥的概念。举个我们开发中会遇到的例子，我们说资源请求并发数达到了1万。
	这里的意思是有1万个请求同时过来了。但是这里很明显不可能真正的同时去处理这1万个请求的吧！如果这台机器的处理器有4个核心，
	不考虑超线程，那么我们认为同时会有4个线程在跑。也就是说，并发访问数是1万，而底层真实的并行处理的请求数是4。
	如果并发数小一些只有4的话，又或者你的机器牛逼有1万个核心，那并发在这里和并行一个效果。
	也就是说，并发可以是虚拟的同时执行，也可以是真的同时执行。而并行的意思是真的同时执行。
	结论是：并行是我们物理时空观下的同时执行，而并发则是操作系统用线程这个模型抽象之后站在线程的视角上看到的“同时”执行。

run方法仅仅是封装线程的代码，直接调用只是普通对象.方法名的调用方式

	一个对象只能调用一次start开启线程
	多个对象调用start就是多线程

	线程默认姓名是Thread-0  Thread-1  Thread-2 ...

	Thread.currentThread()            Thread.currentThread().getName()
	返回对当前正在执行的线程对象的引用

	设置优先级只是增加可能性

	join()方法是阻塞其他线程，让当前线程先走，当前线程是老大
	notify()   唤醒线程    (唤醒有特点的线程)
	notifyAll()   唤醒


	直接调用run()方法是单线程，因为run方法仅仅是封装线程的代码，直接调用只是普通对象.方法名的调用方式